<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on mikeder.net</title>
    <link>https://mikeder.net/tags/programming/</link>
    <description>Recent content in programming on mikeder.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Apr 2023 10:16:08 -0400</lastBuildDate><atom:link href="https://mikeder.net/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Turtle Time Game Devlog 1</title>
      <link>https://mikeder.net/blog/turtletime-devlog-1/</link>
      <pubDate>Wed, 26 Apr 2023 10:16:08 -0400</pubDate>
      
      <guid>https://mikeder.net/blog/turtletime-devlog-1/</guid>
      <description>Turtle Time is my first attempt at game development. I discovered the Bevy Engine, which is written in Rust, and wanted to experiment a little and learn something new outside of my usual backend server programming work.
Template Repo Initial Gameplay Loop Adding Multiplayer Converting single player systems to multiplayer. Player movement systems need to handle movement for ALL players. Determinism - what does it mean? Random spawns and how to agree on their randomness.</description>
    </item>
    
    <item>
      <title>gRPC WebApp Example</title>
      <link>https://mikeder.net/blog/grpc-webapp-template/</link>
      <pubDate>Thu, 30 Jun 2022 15:43:17 -0400</pubDate>
      
      <guid>https://mikeder.net/blog/grpc-webapp-template/</guid>
      <description>Notes for developing a gRPC based web application, for fun and learning.
Use connect-go for server/client transport.
supports gRPC, JSON REST and Connect no need for JSON REST translation proxy Use connect-grpcreflect-go for reflection.
Use OAuth2 with GitHub provider to start. Use React frontend.
Use GitHub actions for linting, building and publishing packages.
golangci-lint go build/test go sematic release GH packages release ( docker image to ghcr.io ) Deploy to AWS or Azure, scripts to use CLI to provision resources.</description>
    </item>
    
  </channel>
</rss>
